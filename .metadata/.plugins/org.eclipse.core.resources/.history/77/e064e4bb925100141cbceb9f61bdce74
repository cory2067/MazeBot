import java.awt.FlowLayout;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.highgui.Highgui;
import org.opencv.highgui.VideoCapture;


public class Main 
{
	public static void main(String[] args) throws InterruptedException
	{
		System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
		VideoCapture cam = new VideoCapture(0);
		Thread.sleep(1000);
		cam.open(0);
		System.out.println("Camera opened: " + cam.isOpened());
		Mat capture = new Mat();
		
		cam.read(capture);
		//System.out.println(capture.width());
		//Highgui.imwrite("camera.jpg", capture);
		
		BufferedImage img = toBufferedImage(capture);
		//ImageIcon icon = new ImageIcon(img);
		
		JFrame frame = new JFrame();
		frame.setLayout(new FlowLayout());
		frame.setSize(img.getWidth()+50, img.getHeight() + 50);
		
		JLabel label = new JLabel();
		frame.add(label);
		frame.setVisible(true);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		while(true)
		{
			Thread.sleep(100);
			cam.read(capture);
			
			label.setIcon(new ImageIcon(toBufferedImage(capture)));
		}
	}

	public static BufferedImage toBufferedImage(Mat m)
	{	
		// source: http://answers.opencv.org/question/10344/opencv-java-load-image-to-gui/
	    int type = BufferedImage.TYPE_BYTE_GRAY;
	    if ( m.channels() > 1 ) {
	        type = BufferedImage.TYPE_3BYTE_BGR;
	    }
	    int bufferSize = m.channels()*m.cols()*m.rows();
	    byte [] b = new byte[bufferSize];
	    m.get(0,0,b);
	    BufferedImage image = new BufferedImage(m.cols(),m.rows(), type);
	    final byte[] targetPixels = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();
	    System.arraycopy(b, 0, targetPixels, 0, b.length);  
	    return image;
	}
}
